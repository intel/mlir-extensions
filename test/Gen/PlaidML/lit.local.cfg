bf16_tests = [
                  'OpTest.Relu.bf16.mlir',
                  'OpTest.Softmax.bf16.mlir',
                  'OpTest.LogicalAnd_mixed.bf16.mlir',
                  'OpTest.Transpose.bf16.mlir',
                  'OpTest.Sum.bf16.mlir',
                  'OpTest.EltwiseAdd.bf16.mlir',
                  'OpTest.Quantize.bf16.mlir',
                  'OpTest.ExplicitPadding.bf16.mlir',
                  'OpTest.BroadcastNonNumpy.bf16.mlir',
                  'OpTest.Argmax.bf16.mlir',
                  'OpTest.ComplexConv2D.bf16.mlir',
                  'CppEdsl.DotF16_AccF32.bf16.mlir',
                  'CppEdsl.Convolution.bf16.mlir',
             ]
local_excludes = [
                  'OpTest.Softmax.bf16.mlir', # allclose needs adjustment
                  'OpTest.Sum.bf16.mlir', # allclose needs adjustment
                  'OpTest.MaxPool1D.i8.mlir',
                  'OpTest.MaxPool1D.i16.mlir',
                  'OpTest.EltwiseAddInt.i8.mlir',
                  'OpTest.EltwiseAddInt.i16.mlir',
                  'OpTest.Quantize.bf16.mlir', # rounds to different int value
                  'CppEdsl.DotF16_AccF32.bf16.mlir',
                 ]
slow_simulator_tests = [
    'CppEdsl.Convolution.bf16.mlir',
    'CppEdsl.Convolution.f16.mlir',
    'CppEdsl.Convolution.f32.mlir',
    'OpTest.ComplexConv2D.bf16.mlir',
    'OpTest.ComplexConv2D.f16.mlir',
    'OpTest.ComplexConv2D.f32.mlir',
]
if(not config.imex_enable_excluded_tests):
    config.excludes.update(local_excludes)

if(not config.imex_enable_bf16_tests):
    config.excludes.update(bf16_tests)

if(config.imex_enable_fs_simulator):
    config.excludes.update(slow_simulator_tests)
