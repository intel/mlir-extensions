#!/bin/env bash
export IMEX_ENABLE_PROFILING=1


platform="$(uname -s)"
case "${platform}" in
    Linux*)     shlib_prefix="lib";;
    Darwin*)    shlib_prefix="lib";;
    CYGWIN*)    shlib_prefix="";;
    MINGW*)     shlib_prefix="";;
    *)          echo "UNKNOWN platform:${platform}" && exit -1
esac

MLIR_RUNNER_UTILS=@LLVM_LIBRARY_DIR@/libmlir_runner_utils.so
MLIR_C_RUNNER_UTILS=@LLVM_LIBRARY_DIR@/libmlir_c_runner_utils.so
IMEX_SYCL_RUNTIME=@IMEX_LIB_DIR@/libsycl-runtime.so
IMEX_L0_RUNTIME=@IMEX_LIB_DIR@/liblevel-zero-runtime.so
BENCHMARK_ROOT=@IMEX_BINARY_DIR@/benchmarks
IMEX_RUNNER=@IMEX_BINARY_DIR@/bin/imex-runner.py

# -l: using level-zero runtime
# -s: using sycl runtime
while getopts ':lsh' opt; do
  case "$opt" in
    l)
      echo "Running with level-zero runtime"
      RUNTIME="${IMEX_L0_RUNTIME}"
      RUNTIMENAME="L0"
      ;;

    s)
      echo "Running with sycl runtime"
      RUNTIME="${IMEX_SYCL_RUNTIME}"
      RUNTIMENAME="SYCL"
      ;;
    ?|h)
      echo "Usage: $(basename $0) [-l] [-s] arg"
      echo "                -s: using sycl runtime"
      echo "                -l: using level-zero runtime"
      echo "                arg: path to a folder containing .mlir files or path to an mlir file"
      exit 1
      ;;
  esac
done
shift "$(($OPTIND -1))"

[ -z "$RUNTIME" ] && echo "Please select a runtime. using '$(basename $0) -h' for more usage info" && exit 1

if [ "$#" -eq 0 ]; then
    TESTS=`find ${BENCHMARK_ROOT} -type f -name '*.mlir' | sort -n`
elif [ "$#" -eq 1 ] && [ -d "$1" ]; then
    TESTS=`find ${BENCHMARK_ROOT}/$1 -type f -name '*.mlir' | sort -n`
elif [ "$#" -eq 1 ] && [ -f "$1" ]; then
    FILE=$1
    EXT=${FILE#*.}
    if [[ "$EXT" -ne "mlir" ]]; then
        echo "Only take .mlir file" && exit -1
    fi
    TESTS=$1
fi

echo "Run the following Tests:"
echo -e "${TESTS}\n"

# clean up old results/reports first
rm report.txt
echo -e "\n================ Imex Perf ($RUNTIMENAME) @ $(date) ================\n" >> report.txt

for i in $TESTS; do
    test_name=$(basename -- "$i")
    echo -n "${test_name}: " >&2
    output=$(@Python3_EXECUTABLE@ $IMEX_RUNNER \
       --pass-pipeline-file=$BENCHMARK_ROOT/pipelines/linalg-to-gpu.pp \
       --runner imex-cpu-runner -e main \
       --shared-libs=$MLIR_RUNNER_UTILS,$MLIR_C_RUNNER_UTILS,$RUNTIME\
       --entry-point-result=void -i $i)
    echo $output
    while IFS= read -r line; do
      if [[ $line == *"the kernel execution time"* ]]; then
        echo "${test_name}: $line"
      fi
    done <<< $output >> report.txt
done
