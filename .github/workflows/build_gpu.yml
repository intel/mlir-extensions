name: GPU Build

on:
  pull_request:
    branches:
      - main
      - upstream
      - 'dist-ndarray'
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    if: github.repository == 'intel-innersource/frameworks.ai.mlir.mlir-extensions'
    runs-on: [self-hosted, pvc]
    timeout-minutes: 450

    env:
      TBB_VER: 2021.6.0
      LEVEL_ZERO_VER: v1.8.1
      TBB_URL_PREFIX: https://github.com/oneapi-src/oneTBB/releases/download/
      LLVM_SHA_FILE: llvm_version.txt

    steps:
      - uses: actions/checkout@v4

      - name: Collect info
        run: |
          sh scripts/sysinfo.sh

      - name: Checkout MLIR
        run: |
          if [ ! -d "llvm-project" ]; then git clone https://github.com/llvm/llvm-project; fi
          export LLVM_SHA=$(cat build_tools/llvm_version.txt)
          cd llvm-project
          git reset --hard HEAD
          git fetch --prune
          git checkout $LLVM_SHA
          git apply ../build_tools/patches/*.patch

      - name: Setup IMEX and run tests
        run: |
          source /opt/intel/oneapi/setvars.sh

          pip install psutil
          cmake -S llvm-project/llvm -B build -GNinja  -DCMAKE_BUILD_TYPE=Release  \
                -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ \
                -DLLVM_ENABLE_PROJECTS=mlir -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_USE_LINKER=gold \
                -DLLVM_ENABLE_ZSTD=OFF -DLLVM_EXTERNAL_PROJECTS="Imex" -DLLVM_EXTERNAL_IMEX_SOURCE_DIR=. \
                -DIMEX_ENABLE_SYCL_RUNTIME=1 -DIMEX_ENABLE_L0_RUNTIME=1 \
                -DLLVM_LIT_ARGS="-a -j 4 --debug --timeout=1800" -DIMEX_ENABLE_PVC_TARGET=1
          set -o pipefail
          cmake --build build --target check-imex | tee build/tests.txt

      - name: Run SG-level XeTile generated cases
        run: |
          rm -rf scripts/xetile-test-gen/GEMM_reports scripts/xetile-test-gen/Generated_GEMM
          cd scripts/xetile-test-gen
          pip install pandas argparse openpyxl
          ./run_tests.sh --gen_default_cases=1 --validate=1 --verbose=1 --llvm_build_dir=../../build

      - name: Upload tests.txt
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: tests_gpu.txt
          path: build/tests.txt
